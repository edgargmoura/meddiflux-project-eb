# version: 0.2

# phases:
#   pre_build:
#     commands:
#       - echo Fazendo login no ECR...
#       - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 011528257712.dkr.ecr.us-east-1.amazonaws.com
#       - REPOSITORY_URI=011528257712.dkr.ecr.us-east-1.amazonaws.com/meddiflux-eb
#       - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
#       - IMAGE_TAG=${COMMIT_HASH:=latest}
#   build:
#     commands:
#       - echo Build iniciado em `date`
#       - echo Gerando imagem da MEDDIFLUX...
#       - docker build -t $REPOSITORY_URI:latest .
#       - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
#   post_build:
#     commands:
#       - echo Build finalizado com sucesso em `date`
#       - echo Fazendo push da imagem para o ECR...
#       - docker push $REPOSITORY_URI:latest
#       - docker push $REPOSITORY_URI:$IMAGE_TAG
#       - npm install
#       - NODE_OPTIONS=--openssl-legacy-provider REACT_APP_API_URL=https://hom-meddiflux.aws-imersao.com.br SKIP_PREFLIGHT_CHECK=true npm run build --prefix client
#       - aws s3 sync client/build s3://meddiflux-assets-eb/hom --exclude "index.html"
#       - aws s3 sync client/build s3://meddiflux-assets-eb/hom --exclude "*" --include "index.html"
#       - echo Gerando artefato da imagem para o EB
# artifacts:
#   files: docker-compose.yml

version: 0.2

phases:
  pre_build:
    commands:
      - echo Fazendo login no ECR...
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 011528257712.dkr.ecr.us-east-1.amazonaws.com
      - REPOSITORY_URI=011528257712.dkr.ecr.us-east-1.amazonaws.com/meddiflux-eb
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build iniciado em `date`
      - echo Gerando imagem da MEDDIFLUX...
      - docker build -t $REPOSITORY_URI:latest .  # Cria a imagem com tag `latest`
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG  # Adiciona a tag com o hash do commit
  post_build:
    commands:
      - echo Fazendo push da imagem para o ECR...
      - docker push $REPOSITORY_URI:latest  # Push da imagem com tag `latest`
      - docker push $REPOSITORY_URI:$IMAGE_TAG  # Push da imagem com tag do hash do commit
      - echo Gerando arquivo docker-compose.yml...
      - npm install
      - NODE_OPTIONS=--openssl-legacy-provider REACT_APP_API_URL=https://hom-meddiflux.aws-imersao.com.br SKIP_PREFLIGHT_CHECK=true npm run build --prefix client
      - echo Gerando arquivo docker-compose.yml...
        cat <<EOF > docker-compose.yml
        version: '3.8'
        services:
          server:
            image: $REPOSITORY_URI:$IMAGE_TAG
            container_name: meddiflux
            ports:
              - "80:8080"
        EOF
      - echo Arquivo docker-compose.yml gerado com sucesso!
artifacts:
  files:
    - docker-compose.yml
